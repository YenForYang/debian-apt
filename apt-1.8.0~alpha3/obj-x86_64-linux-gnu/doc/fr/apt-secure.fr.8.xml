<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % aptent SYSTEM "apt.ent"> %aptent;
<!ENTITY % aptverbatiment SYSTEM "apt-verbatim.ent"> %aptverbatiment;
<!ENTITY % aptvendor SYSTEM "apt-vendor.ent"> %aptvendor;
]>

<refentry>
 <refentryinfo>
   <!-- The last update date -->
&apt-author.jgunthorpe;
   &apt-author.team;
   &apt-email;
   &apt-product;
   
   <date>2016-08-06T00:00:00Z</date>
 </refentryinfo>

 <refmeta>
   <refentrytitle>apt-secure</refentrytitle>
   <manvolnum>8</manvolnum>
   <refmiscinfo class="manual">APT</refmiscinfo>
 </refmeta>


 

 
 
 <!-- NOTE: This manpage has been written based on the
     Securing Debian Manual ("Debian Security
     Infrastructure" chapter) and on documentation
     available at the following sites:
     http://wiki.debian.net/?apt06
     http://www.syntaxpolice.org/apt-secure/
     http://www.enyo.de/fw/software/apt-secure/
-->
<!-- TODO: write a more verbose example of how it works with 
     a sample similar to 
     http://www.debian-administration.org/articles/174
     ?
-->
<!-- Man page title -->
<refnamediv>
    <refname>apt-secure</refname>
    <refpurpose>Gestion de l'authentification d'archive avec APT</refpurpose>
 </refnamediv>

 <refsect1><title>Description</title>
   <para>
   Depuis sa version 0.6, <command>apt</command> sait vérifier la signature du
fichier Release de chaque dépôt. On s'assure ainsi que les paquets dans
l'archive ne peuvent pas être modifiés par quelqu'un qui ne possède pas la
clé de la signature du fichier Release. À partir de la version 1.1,
<command>apt</command> exige que les dépôts fournissent des informations
récentes d'authentification pour une utilisation libre du dépôt. Depuis la
version 1.5, les modifications dans les informations contenues dans le
fichier Release sur le dépôt, doivent être confirmées avant qu'APT continue
à appliquer les mises à jour depuis ce dépôt.
   </para>

   <para>
   Attention : toutes les interfaces de gestion de paquets comme &apt-get;,
&aptitude; et &synaptic; possèdent cette fonction de certification, aussi
cette page de manuel utilise <literal>APT</literal> pour se référer à
l'ensemble d'entre elles, pour des raisons de simplicité.
   </para>
</refsect1>

 <refsect1><title>Dépôts non signés</title>
   <para>
   Si une archive possède un fichier Release non signé ou pas de fichier
Release du tout, les versions actuelles d'APT refuseront par défaut d'en
télécharger des données dans les opérations <command>update</command>. Même
si un frontal tel que &apt-get; est forcé de télécharger, il demandera une
confirmation explicite si une installation inclut un paquet d'une archive
non authentifiée.
   </para>

   <para>
   Vous pouvez contraindre les clients APT à n'émettre que des avertissements
en configurant l'option <option>Acquire::AllowInsecureRepositories</option>
à <literal>true</literal>. L'option <literal>allow-insecure=yes</literal> de
&sources-list; peut aussi permettre à des dépôts individuels d'être non
sécurisés. Veuillez noter que les dépôts non sécurisés sont fortement
déconseillés et toutes les options pour contraindre APT à continuer à les
prendre en charge devront être éventuellement supprimées. Les utilisateurs
disposent aussi de l'option <option>Trusted</option> pour désactiver même
les avertissements, mais il faut être sûr de comprendre ses implications
détaillées dans &sources-list;.
   </para>

   <para>
   Un dépôt qui auparavant était authentifié, mais qui perdrait cet état lors
d'une opération <command>update</command> envoie un message d'erreur à tous
les clients d'APT quelle que soit l'option d'autoriser ou d'interdire
l'utilisation de dépôts non sécurisés. L'erreur peut être contournée par le
réglage supplémentaire de
<option>Acquire::AllowDowngradeToInsecureRepositories</option> à
<literal>true</literal>, ou, pour des dépôts individuels avec l'option
<literal>allow-downgrade-to-insecure=yes</literal> de &sources-list;.
   </para>
</refsect1>

 <refsect1><title>Dépôts signés</title>
   <para>
   D'une archive APT jusqu'à l'utilisateur, la chaîne de confiance se construit
en plusieurs étapes. <command>Apt-secure</command> est la dernière
étape. Faire confiance à une archive ne signifie pas que les paquets qu'elle
contient sont exempts de code malveillant, mais signifie que vous faites
confiance au responsable de l'archive. C'est ensuite au responsable de
l'archive de faire en sorte que l'archive soit fiable.
   </para>

   <para><command>Apt-secure</command> n'examine pas la signature d'un
paquet. Certains programmes peuvent le faire comme
<command>debsig-verify</command> ou <command>debsign</command>, qu'on peut
trouver dans les paquets debsig-verify et devscripts.</para>

   <para>
   La chaîne de confiance dans Debian commence, par exemple, quand un
responsable de paquet envoie un nouveau paquet ou une nouvelle version d'un
paquet dans l'archive. Cet envoi, pour être effectif, doit être signé avec
la clé d'un responsable qui se trouve dans un des trousseaux des
responsables de paquet Debian (disponibles dans le paquet
debian-keyring). Les clés des responsables de paquet sont signées par
d'autres responsables, suivant des procédures préétablies pour s'assurer de
l'identité des propriétaires de la clé. Des procédures similaires existent
dans toutes les distributions basées sur Debian.
   </para>

   <para>
   Une fois que le paquet envoyé a été vérifié et inclus dans l'archive, la
signature du responsable est enlevée, une somme de contrôle du paquet est
calculée et mise dans le fichier Packages. Une somme de contrôle de tous les
paquets est ensuite calculée et mise dans le fichier Release. Ce fichier est
signé par la clé de l'archive pour la version courante de la distribution et
distribuée en même temps que les paquets et les fichiers Packages sur les
miroirs. Les clés sont dans le trousseau de clés de l'archive fournies par
le paquet &keyring-package;.
   </para>

   <para>
   Un utilisateur peut consulter la signature du fichier Release, extraire la
somme de contrôle d'un paquet et la comparer avec la somme du paquet qu'il a
téléchargé, ou tout simplement compter sur APT pour faire ces opérations
automatiquement.
   </para>

   <para>Cette façon de faire est différente d'une vérification de la signature d'un
paquet. Elle vise à empêcher deux types d'attaque possibles :
   </para>

    <itemizedlist>
       <listitem><para><literal>Attaque réseau de type « homme au milieu »</literal>. Sans
vérification de signature, quelqu'un de malveillant peut s'introduire au
milieu du processus de téléchargement et insérer du code soit en contrôlant
un élément du réseau, routeur, commutateur, etc. soit en détournant le
trafic vers un serveur fourbe (par usurpation d'adresses).</para></listitem>
 
       <listitem><para><literal>Attaque par compromission d'un miroir sur le réseau</literal>.
Sans vérification de signature, quelqu'un de malveillant peut compromettre
un miroir et modifier les fichiers. Ainsi tous ceux qui téléchargent les
paquets de ce miroir propagent du code malveillant.</para></listitem>
    </itemizedlist>

   <para>Cependant cette méthode ne protège pas contre une compromission du serveur
principal lui-même (qui signe les paquets) ni contre la compromission de la
clé qui sert à signer les fichiers Release. Mais elle peut compléter la
signature des paquets.</para>
</refsect1>

<refsect1><title>Modifications des informations</title>
   <para>
   Le fichier Release renferme, en plus des sommes de contrôle pour les
fichiers du dépôt, des informations générales sur le dépôt comme l'origine,
le nom de code ou le numéro de la version.
   </para><para>
   Ces informations apparaissent à plusieurs endroits, aussi, le propriétaire
d'un dépôt devrait toujours s'assurer de leur exactitude. Par ailleurs, les
configurations de l'utilisateur, comme &apt-preferences;, peuvent dépendre
de ces informations et les utiliser. Depuis la version 1.5, l'utilisateur
doit par conséquent confirmer de façon explicite les modifications pour
signaler qu'il est suffisamment préparé, par exemple, pour la nouvelle
version majeure de la distribution fournie dans le dépôt (comme indiqué par
exemple par le nom de code).
   </para>
</refsect1>

<refsect1><title>Configuration utilisateur</title>
   <para>
   Le programme qui gère la liste des clés utilisées par APT pour faire
confiance aux dépôts s'appelle <command>apt-key</command>. Il peut ajouter
ou supprimer des clés aussi bien que lister les clés de confiance. Il est
possible de limiter la capacité pour une ou plusieurs clés de signer telle
ou telle archive avec l'option <option>Signed-By</option> dans
&sources-list;.
   </para><para>
   Veuillez noter qu'une installation par défaut possède toutes les clés pour
obtenir en toute sécurité des paquets des dépôts par défaut, aussi, bricoler
avec <command>apt-key</command> n'est nécessaire que si vous souhaitez
ajouter des dépôts tiers.
   </para><para>
   Pour ajouter une clé, vous devez d'abord la télécharger. Il vaut mieux
utiliser un canal fiable pour ce téléchargement. Ensuite vous l'ajoutez avec
la commande <command>apt-key</command> et vous lancez la commande
<command>apt-get update</command> pour télécharger et vérifier le fichier
<filename>InRelease</filename> ou <filename>Release.gpg</filename> de
l'archive que vous avez configurée.
   </para>
</refsect1>

<refsect1><title>Configuration du dépôt</title>
   <para>
   Si vous voulez signer les archives dont vous avez la responsabilité, vous
devez :
   </para>

     <itemizedlist>
       <listitem><para><emphasis>créer un fichier Release à la racine de l'archive</emphasis>, s'il
n'existe pas déjà. Vous pouvez le créer avec la commande
<command>apt-ftparchive release</command> (fournie dans le paquet
apt-utils).</para></listitem>
   
      <listitem><para><emphasis>le signer</emphasis>, avec les commande <command>gpg -- clearsign
-o InRelease Release</command> et <command>gpg -abs -o Release.gpg
Release</command>.</para></listitem>

      <listitem><para>
      <emphasis>publier l'empreinte de la clé</emphasis>. Ainsi les utilisateurs
de votre archive connaîtront la clé qu'ils doivent importer pour
authentifier les fichiers de l'archive. Le mieux est de diffuser sa clé dans
son propre paquet de trousseau comme le fait &keyring-distro; avec
&keyring-package; pour ensuite distribuer automatiquement les mises à jour
et les transitions de clés.
      </para></listitem>

      <listitem><para>
      <emphasis>fournir les instructions pour ajouter l'archive et la
clé</emphasis>. Si les utilisateurs ne peuvent récupérer de façon sûre votre
clé, la chaîne de confiance décrite plus haut est rompue. La façon d'aider
les utilisateurs à ajouter votre clé de l'archive dépend de l'archive et de
l'audience cible : cela va d'un paquet de trousseau inclus dans une autre
archive que des utilisateurs ont déjà configurée (comme les dépôts par
défaut de leur distribution) à la mobilisation du web de confiance.
      </para></listitem>

    </itemizedlist>

    <para>Chaque fois que le contenu de l'archive change, (suppression ou ajout de
nouveaux paquets) le responsable doit refaire les deux premières étapes.</para>

</refsect1>

<refsect1><title>Voir aussi</title> 
<para> 
&apt-conf;, &apt-get;, &sources-list;, &apt-key;, &apt-ftparchive;,
&debsign;, &debsig-verify;, &gpg;
</para>

<para>Pour des informations plus complètes, vous pouvez consulter <ulink
url="https://www.debian.org/doc/manuals/securing-debian-howto/ch7">
l'infrastructure debian pour la sécurité</ulink> un chapitre du manuel
Debian sur la sécurité (disponible dans le paquet harden-doc) et le <ulink
url="http://www.cryptnet.net/fdp/crypto/strong_distro.html">Strong
Distribution HOWTO</ulink> par V. Alex Brennen.  </para>

</refsect1>

 &manbugs;
 &manauthor;

<refsect1><title>Auteurs des pages de manuel</title> 

<para>Cette page a été écrite à partir des travaux de Javier Fernández-Sanguino
Peña, Isaac Jones, Colin Walters, Florian Weimer et Michael Vogt.
</para>

</refsect1>
 

 <refsect1><title>&translation-title;</title>
   <para>&translation-holder;</para>
   <para>&translation-english;</para>
 </refsect1>
</refentry>
