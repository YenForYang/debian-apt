<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % aptent SYSTEM "apt.ent"> %aptent;
<!ENTITY % aptverbatiment SYSTEM "apt-verbatim.ent"> %aptverbatiment;
<!ENTITY % aptvendor SYSTEM "apt-vendor.ent"> %aptvendor;
]>

<refentry>

 <refentryinfo>
   <!-- The last update date -->
&apt-author.jgunthorpe;
   &apt-author.team;
   &apt-email;
   &apt-product;
   
   <date>2018-10-14T00:00:00Z</date>
 </refentryinfo>
 
 <refmeta>
   <refentrytitle>apt-get</refentrytitle>
   <manvolnum>8</manvolnum>
   <refmiscinfo class="manual">APT</refmiscinfo>
 </refmeta>
 
 
 <!-- Man page title -->
<refnamediv>
    <refname>apt-get</refname>
    <refpurpose>APT パッケージ操作ユーティリティ -- コマンドラインインターフェース</refpurpose>
 </refnamediv>

 &synopsis-command-apt-get;

 <refsect1><title>説明</title>
   <para><command>apt-get</command> は、パッケージを操作するコマンドラインツールで、APT
ライブラリを用いる他のツールのユーザ側「バックエンド」といえるものです。「フロントエンド」インターフェースには、&aptitude;,
&synaptic;, &wajig; などがあります。</para>

   <para><option>-h</option> オプションや <option>--help</option> オプションを除き、以下に挙げるコマンドが必要です。</para>
   
   <variablelist>
     <varlistentry><term><option>update</option></term>
     <listitem><para><literal>update</literal>は、取得元からパッケージインデックスファイルの再同期を行うのに使用します。利用可能なパッケージのインデックスは、<filename>/etc/apt/sources.list</filename>
に記述した場所から取得します。例えば Debian アーカイブを利用する際、このコマンドが
<filename>Packages.gz</filename>
ファイルを検索することで、新規または更新されたパッケージの情報が利用可能となります。<literal>update</literal>
は、<literal>upgrade</literal> や <literal>dist-upgrade</literal>
を行う前に常に実行してください。前もってパッケージファイルのサイズを知ることができないため、全体の進捗メータは正しく表示されません。</para></listitem>
     </varlistentry>
     
     <varlistentry><term><option>upgrade</option></term>
     <listitem><para><literal>upgrade</literal>
は、現在システムにインストールされている全パッケージの最新バージョンを、<filename>/etc/apt/sources.list</filename>
に列挙した取得元からインストールするのに使用します。現在インストール中のパッケージに新しいバージョンがあれば更新しますが、いかなる時も現在インストール中のパッケージの削除は行いませんし、インストールしていないパッケー所の取得・インストールは行いません。対象のパッケージが、他のパッケージのインストール状態を変更せずに更新できない場合は、現在のバージョンのままとなります。最初に
<literal>update</literal> を実行しておき、<command>apt-get</command>
にパッケージの新しいバージョンがあることを知らせる必要があります。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>dist-upgrade</option></term>
     <listitem><para><literal>dist-upgrade</literal> は、<literal>upgrade</literal>
の機能に加え、新バージョンのパッケージに対する依存関係の変更を知的に操作します。<command>apt-get</command>
は「洗練された」競合解決システムを持ち、必要とあらば比較的重要でないパッケージを犠牲にして、最重要パッケージの更新を試みます。そのため
<literal>dist-upgrade</literal>
は、いくつかのパッケージを削除する可能性があります。<filename>/etc/apt/sources.list</filename>
ファイルには、必要なパッケージファイルを検索する場所のリストが含まれています。特定のパッケージ向けに、一般的な設定を上書きする機構については、&apt-preferences;
をご覧ください。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>dselect-upgrade</option></term>
     <listitem><para><literal>dselect-upgrade</literal> は、伝統的な Debian GNU/Linux パッケージ管理フロントエンドの
&dselect; と共に使用されます。<literal>dselect-upgrade</literal> は、&dselect;
で作られた利用可能パッケージの<literal>Status</literal>
フィールドの変更を追跡し、その状態を反映させるのに必要なアクションを実行します。(例えば、古いパッケージの削除や新しいパッケージのインストールなど)</para></listitem>
     </varlistentry>

     <varlistentry><term><option>install</option></term>
     <listitem>
	 <para><literal>install</literal> の後には、インストールや更新したいパッケージを 1
つ以上指定します。指定するパッケージは、完全なファイル名ではなくパッケージ名です (例えば Debian
システムでは、<filename>apt-utils_&apt-product-version;_amd64.deb</filename> ではなく
<package>apt-utils</package>
を引数として与えます)。インストールするよう指定したすべてのパッケージに対し、依存パッケージも含めて取得・インストールを行います。<filename>/etc/apt/sources.list</filename>
ファイルを、要求するパッケージの場所を特定するのに使用します。パッケージ名の後ろに (空白を含まず)
ハイフンが追加されている場合、そのパッケージがインストールされていれば削除します。同様に、インストールするパッケージを明示するのにプラス記号も使用できます。この記号は
apt-get の競合解決システムの判断を上書きするのに利用される可能性があります。
	 </para>

     <para>パッケージにイコール記号とバージョンを続けることで、選択したバージョンのパッケージをインストールすることができます。つまり、指定のバージョンのパッケージをインストールするように選択する、ということです。別の方法としては、ディストリビューションを特定するのに、パッケージ名に続けて、スラッシュとディストリビューションのバージョンやアーカイブ名
(stable, testing, unstable) を記述できます。</para>

     <para>バージョン選択機構はダウングレードにも使用できるため、注意して使用しなければなりません。</para>

	<para>システムにインストール済みのパッケージを、すべてアップグレードするのではなく、いくつかのパッケージをアップグレードする場合にも、このターゲットを使用できます。現在インストールされているパッケージすべての最新版をインストールする
"upgrade" ターゲットと異なり、"install"
は指定したパッケージの最新版のみをインストールします。単純にアップグレードしたいパッケージ名を指定してください。より新しいバージョンが利用できる場合、そのパッケージ
(と前述の依存関係にあるパッケージ) をダウンロード・インストールします。
	</para>

     <para>最後に、&apt-preferences; 機構により、特定のパッケージに対するインストールポリシーを作成できます。</para>

     <para>構文に '.', '?', '*' を含み、パッケージ名がマッチしなかった場合、POSIX
正規表現であると見なし、データベース内の全パッケージ名に対して適用します。マッチしたパッケージすべてがインストール(もしくは削除)されます。'lo.*'
のような文字列は、'how-lo' や 'lowest' にマッチすることに注意してください。そうしたくなければ、'^' や '$'
を付けるか、もっと詳しい正規表現を指定してください。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>remove</option></term>
     <listitem><para><literal>remove</literal> は、パッケージが削除されることを除き、<literal>install</literal>
と同様です。削除されたパッケージの設定ファイルは、システムに残ったままになることに注意してください。プラス記号がパッケージ名に (間に空白を含まずに)
付加されると、識別されたパッケージを、削除ではなくインストールします。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>purge</option></term>
     <listitem><para>パッケージが削除かつ完全削除 (すべての設定ファイルも削除) されるのを除き、<literal>purge</literal> は
<literal>remove</literal> と同じです。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>source</option></term>
     <listitem><para><literal>source</literal> は、<command>apt-get</command> にソースパッケージを取得させます。APT
はどのソースパッケージを取得するか決めるため、利用可能なパッケージを検査します。その後、デフォルトリリースから最新の利用可能なソースパッケージを見つけ、カレントディレクトリへダウンロードします。デフォルトリリースは、可能であれば、<literal>APT::Default-Release</literal>
オプション、<option>-t</option> オプション、パッケージごとの <literal>pkg/release</literal>
構文で指定します。</para>

    <para>The arguments are interpreted as binary and source package names.  See the
<option>--only-source</option> option if you want to change that.</para>

     <para>ソースパッケージは、&sources-list; ファイルの <literal>deb-src</literal>
行により、バイナリパッケージと分けて管理されます。つまり、ソースを取得したいリポジトリを、それぞれ追加する必要があるということです。こうしないと、誤った
(古すぎ・新しすぎな) ソースバージョンを取得したり、何も取得できなくなります。</para>

     <para><option>--compile</option> オプションを指定すると、<command>dpkg-buildpackage</command>
を用いて、<command>--host-architecture</command> オプションで定義したアーキテクチャのバイナリ .deb
パッケージをコンパイルします。<option>--download-only</option> を指定すると、ソースパッケージを展開しません。</para>

     <para>パッケージと同様に、ソース名の後ろにイコールと取得したいバージョンを置くと、指定したバージョンのソースを取得できます。<literal>APT::Get::Only-Source</literal>
オプションが暗黙のうちに有効になっているため、ソースパッケージ名とバージョンに厳密に一致させています。</para>

     <para>ソースパッケージはインストールされず、バイナリパッケージのように <command>dpkg</command>
データベースで管理されないことに注意してください。ソースの tarball のように、単にカレントディレクトリにダウンロードします。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>build-dep</option></term>
     <listitem><para><literal>build-dep</literal>
は、ソースパッケージの構築依存関係を満たすように、パッケージのインストール・削除を行います。デフォルトでは、パッケージをネイティブに構築する依存関係を満たします。お望みなら、<option>--host-architecture</option>
オプションにより、別のホストアーキテクチャを指定できます。</para><para>The arguments are interpreted as binary or source package names. See the
<option>--only-source</option> option if you want to change that.</para></listitem>
     </varlistentry>

     <varlistentry><term><option>check</option></term>
     <listitem><para><literal>check</literal> は、パッケージキャッシュの更新や壊れた依存関係をチェックする診断ツールです。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>download</option></term>
       <listitem><para><literal>download</literal> は、与えたバイナリパッケージを、カレントディレクトリにダウンロードします。
       </para></listitem>
     </varlistentry>

     <varlistentry><term><option>clean</option></term>
     <listitem><para><literal>clean</literal>
は、取得したパッケージのローカルリポジトリを掃除します。<filename>&cachedir;/archives/</filename> と
<filename>&cachedir;/archives/partial/</filename> からロックファイル以外すべて削除します。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>autoclean</option> (および <option>auto-clean</option> 1.1 以降の別名)</term>
     <listitem><para><literal>clean</literal> のように、<literal>autoclean</literal>
は取得したパッケージのローカルリポジトリを掃除します。違いは、もうダウンロードされることがないパッケージファイルや、ほとんど不要なパッケージファイルのみを削除することです。このため、キャッシュは、制御不能になるほど成長することなく、長期にわたって維持することができます。設定オプション
<literal>APT::Clean-Installed</literal> に off
をセットしていれば、インストール済みのパッケージファイルが削除されるのを防ぐことができます。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>autoremove</option> (および <option>auto-remove</option> 1.1 以降の別名)</term>
     <listitem><para><literal>autoremove</literal>
は、他のパッケージの依存関係を満たすために自動的にインストールされ、もう必要なくなったパッケージを削除するのに使用します。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>changelog</option></term>
	<listitem><para><literal>changelog</literal> は、パッケージの changelog
をダウンロードし、<command>sensible-pager</command> で表示します。デフォルトでは、インストールされているバージョンの
changelog を表示します。しかし、<option>install</option> コマンドと同じオプションを指定することができます。</para>
       </listitem>
     </varlistentry>

     <varlistentry><term><option>indextargets</option></term>
	<listitem><para>デフォルトでは <command>apt-get update</command> でダウンロードすることができるすべてのデータファイル
(別名インデックスターゲット) に関する情報の deb822
形式のリストを表示します。出力形式を変更する、またレコードをフィルタするデフォルト出力の行を受け付けるための
<option>--format</option>
オプションをサポートします。コマンドは主に、ダウンロードしたファイルの情報やファイル名を取得するために、APT
を扱う外部ツール用のインターフェースとして使用されます。そして、外部ツールが自身で再度ダウンロードする代わりに使用することができます。詳細なドキュメントはここでは省略しますが、代わりに
<package>apt-doc</package> パッケージに収録されている
<literal><filename>doc/acquire-additional-files.txt</filename></literal>
で見つけることができます。
	   </para>
	</listitem>
     </varlistentry>


   </variablelist>
 </refsect1>
 
 <refsect1><title>オプション</title>
   &apt-cmdblurb;

   <variablelist>
     <varlistentry><term><option>--no-install-recommends</option></term>
     <listitem><para>「推奨」パッケージをインストールする依存関係と見なしません。設定項目:
<literal>APT::Install-Recommends</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--install-suggests</option></term>
     <listitem><para>「提案」パッケージをインストールする依存関係と見なします。設定項目: <literal>APT::Install-Suggests</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>-d</option></term><term><option>--download-only</option></term>
     <listitem><para>ダウンロードのみ - パッケージファイルの取得のみを行い、展開・インストールを行いません。設定項目:
<literal>APT::Get::Download-Only</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>-f</option></term><term><option>--fix-broken</option></term>
     <listitem><para>修復 - 依存関係が壊れたシステムの修正を試みます。このオプションを install や remove と一緒に使うときは、APT
が解決法を推測するので、パッケージを指定しなくてもかまいません。どのパッケージを指定しても、完全に問題を解決します。APT
自体は、システムに存在する破損したパッケージ依存関係を許すことができないので、初めて APT
を実行する場合、このオプションが必要になることがあります。システムの依存関係構造にかなり問題がある場合は、手動で修正するよう要求することもあります。(通常は、問題のあるパッケージを取り除くのに
<command>dpkg --remove</command> を使用します) このオプションを <option>-m</option>
オプションと同時に使用すると、エラーになる状況があるかもしれません。設定項目:
<literal>APT::Get::Fix-Broken</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>-m</option></term><term><option>--ignore-missing</option></term>
     <term><option>--fix-missing</option></term>
     <listitem><para>欠落パッケージの無視 - パッケージが取得できなかったり、(パッケージの破損で)
取得した後の整合性チェックに失敗した場合、そのパッケージの処理を保留し最後まで処理を続けます。このオプションを <option>-f</option>
オプションと同時に使用すると、エラーになる状況があるかもしれません。パッケージをインストールするよう選択している (特にコマンドラインでの操作する)
場合や、ダウンロードできなかった場合に、なにも表示せず保留することになります。設定項目:
<literal>APT::Get::Fix-Missing</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--no-download</option></term>
     <listitem><para>パッケージのダウンロードを無効にします。これはすでにダウンロードした .deb に対してのみ APT
を行う場合に、<option>--ignore-missing</option> と併せて使うのがよいでしょう。設定項目:
<literal>APT::Get::Download</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>-q</option></term><term><option>--quiet</option></term>
     <listitem><para>静粛 - 進捗表示を省略し、ログをとるのに便利な出力を行います。最大 2 つまで q
を重ねることでより静粛にできます。また、<option>-q=#</option>
のように静粛レベルを指定して、設定ファイルを上書きすることもできます。静粛レベル 2 は <option>-y</option>
を含んでいることに注意してください。APT が意図しない決定を行うかもしれないので -d, --print-uris, -s
のような操作を行わないオプションをつけずに -qq を使用するべきではありません。設定項目: <literal>quiet</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>-s</option></term>
                   <term><option>--simulate</option></term>
		   <term><option>--just-print</option></term>
		   <term><option>--dry-run</option></term>
		   <term><option>--recon</option></term>
		   <term><option>--no-act</option></term>
     <listitem><para>何もしない - 現在のシステム状態に基づいて起こるイベントのシミュレーションを行い、実際にはシステムを変更しません。ロックは無効になる
(<option>Debug::NoLocking</option>) ので、<command>apt-get</command>
実行中にシステムの状態が変化する可能性があります。シミュレーションは root 以外のユーザが実行できますが、シミュレーションを歪めるすべての apt
設定への読み取りアクセス権を持っていない可能性があります。この警告を表す通知は、root 以外のユーザではデフォルトで表示されます
(<option>APT::Get::Show-User-Simulation-Note</option>)。設定項目:
<literal>APT::Get::Simulate</literal></para>

     <para>シミュレートの結果、<command>dpkg</command> の動作を表す一連の行のそれぞれに、設定
(<literal>Conf</literal>)、削除 (<literal>Remv</literal>)、展開
(<literal>Inst</literal>) を表示します。角カッコは壊れたパッケージを表し、(まれに)
空の角カッコは大した問題ではないことを表します。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>-y</option></term><term><option>--yes</option></term>
                   <term><option>--assume-yes</option></term>
     <listitem><para>プロンプトへの自動承諾 - すべてのプロンプトに自動的に "yes"
と答え、非対話的に実行します。保留したパッケージの状態を変更したり、必須パッケージを削除するような不適切な状況の場合、<literal>apt-get</literal>
は処理を中断します。設定項目: <literal>APT::Get::Assume-Yes</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--assume-no</option></term>
     <listitem><para>全ての質問に、自動的に "no" と答えます。設定項目: <literal>APT::Get::Assume-No</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--no-show-upgraded</option></term>
     <listitem><para>更新される全パッケージの表示を行いません。設定項目: <literal>APT::Get::Show-Upgraded</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>-V</option></term><term><option>--verbose-versions</option></term>
     <listitem><para>更新・インストールするパッケージのバージョンをすべて表示します。設定項目:
<literal>APT::Get::Show-Versions</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>-a</option></term>
                   <term><option>--host-architecture</option></term>
     <listitem><para>このオプションは、<command>apt-get source --compile</command>
で構築するパッケージのアーキテクチャや、どのようにクロス依存関係を解決するかを制御します。デフォルトでは未定義で、これはホストアーキテクチャは、(<literal>APT::Architecture</literal>
で定義した) ビルドアーキテクチャと同じという意味になります。設定項目:
<literal>APT::Get::Host-Architecture</literal>。
     </para></listitem>
     </varlistentry>

     <varlistentry><term><option>-P</option></term>
                   <term><option>--build-profiles</option></term>
     <listitem><para>このオプションは、<command>apt-get source --compile</command>
でパッケージをビルドする際に有効化するビルドプロファイルや、どのようにクロス依存関係を解決するかを制御します。デフォルトでは有効化するビルドプロファイルはありません。コンマで連結することで複数のビルドプロファイルを有効化できます。設定項目:
<literal>APT::Get::Host-Architecture</literal>
     </para></listitem>
     </varlistentry>

     <varlistentry><term><option>-b</option></term><term><option>--compile</option></term>
                   <term><option>--build</option></term>
     <listitem><para>ソースパッケージをダウンロード後、コンパイルします。設定項目: <literal>APT::Get::Compile</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--ignore-hold</option></term>
     <listitem><para>保留パッケージの無視 - パッケージの保留指示を無視して <command>apt-get</command>
を行います。<literal>dist-upgrade</literal> と共に使用し、パッケージを大量に、保留解除するのに便利です。設定項目:
<literal>APT::Ignore-Hold</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--with-new-pkgs</option></term>
     <listitem><para><literal>upgrade</literal>
と併せて使った場合に新しいパッケージのインストールを許可します。これは新しい依存をインストールするために既にインストールされているパッケージを更新する必要がある場合に有用です。パッケージを保留する代わりに
<literal>upgrade</literal>
がパッケージをアップグレードして新しい依存をインストールします。このオプションと併せて使った場合、<literal>upgrade</literal>
がパッケージを削除することはなく、新規追加を許可するだけであることに注意してください。設定項目:
<literal>APT::Get::Upgrade-Allow-New</literal>
     </para></listitem>
     </varlistentry>

     <varlistentry><term><option>--no-upgrade</option></term>
     <listitem><para>パッケージ更新なし -  <literal>install</literal>
と同時に使用すると、<literal>no-upgrade</literal>
は、コマンドラインで指定したパッケージが、すでにインストールしてある場合に更新を行いません。設定項目:
<literal>APT::Get::Upgrade</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--only-upgrade</option></term>
     <listitem><para>新規パッケージインストールなし -  <literal>install</literal>
と同時に使用すると、<literal>only-upgrade</literal>
は、すでにインストールされているパッケージのみをアップグレードし、新しいパッケージのインストール要求を無視します。設定項目:
<literal>APT::Get::Only-Upgrade</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--allow-downgrades</option></term>
     <listitem><para>ダウングレードを行う場合でも、確認なしで実行してしまう危険なオプションです。よほどの状況でなければ、使うべきではありません。このオプションを使うと、システムを破壊しかねません!
設定項目: <literal>APT::Get::allow-downgrades</literal>。APT 1.1 で導入されました。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>--allow-remove-essential</option></term>
     <listitem><para>強制承諾 -
必要不可欠なものを削除する場合でも、確認なしで実行してしまう危険なオプションです。よほどの状況でなければ、使うべきではありません。<literal>force-yes</literal>
を使うと、システムを破壊しかねません! 設定項目:
<literal>APT::Get::allow-remove-essential</literal>。APT 1.1 で導入されました。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>--allow-change-held-packages</option></term>
     <listitem><para>強制承諾 -
保持されたパッケージを変更する場合でも、確認なしで実行してしまう危険なオプションです。よほどの状況でなければ、使うべきではありません。このオプションを使うと、システムを破壊しかねません!
設定項目: <literal>APT::Get::allow-change-held-packages</literal>。APT 1.1
で導入されました。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>--force-yes</option></term>
     <listitem><para>Force yes; this is a dangerous option that will cause apt to continue
without prompting if it is doing something potentially harmful. It should
not be used except in very special situations. Using
<literal>force-yes</literal> can potentially destroy your system!
Configuration Item: <literal>APT::Get::force-yes</literal>. This is
deprecated and replaced by <option>--allow-unauthenticated</option> ,
<option>--allow-downgrades</option> ,
<option>--allow-remove-essential</option> ,
<option>--allow-change-held-packages</option> in 1.1. </para></listitem>
     </varlistentry>

     <varlistentry><term><option>--print-uris</option></term>
     <listitem><para>インストールするファイルを取得する代わりに、その URI を表示します。URI には、パス、対象ファイル名、ファイルサイズ、予測される MD5
ハッシュが含まれています。出力したファイル名が、常にリモートサイトのファイル名と一致するわけではない、ということに注意してください! これは
<literal>source</literal> コマンド、<literal>update</literal>
コマンドでも動作します。<literal>update</literal> で使用したときには、MD5
やファイルサイズを含みません。このとき、圧縮ファイルの展開はユーザの責任において行ってください。設定項目:
<literal>APT::Get::Print-URIs</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--purge</option></term>
     <listitem><para>削除する際、「削除」ではなく「完全削除」を行います。「完全削除」を行うと指示したパッケージ名の後には、アスタリスク ("*")
が付きます。<option>remove --purge</option> は <option>purge</option> コマンドと等価です。
設定項目: <literal>APT::Get::Purge</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--reinstall</option></term>
     <listitem><para>すでに最新版がインストールされていても、パッケージを再インストールします。設定項目:
<literal>APT::Get::ReInstall</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--list-cleanup</option></term>
     <listitem><para>この機能はデフォルトで ON になっています。OFF にするには <literal>--no-list-cleanup</literal>
としてください。ON の場合、<command>apt-get</command> は古くなったファイルを確実に消去するため、自動的に
<filename>&statedir;/lists</filename> の中身を管理します。これを OFF
にするのは、取得元リストを頻繁に変更する時ぐらいでしょう。設定項目: <literal>APT::Get::List-Cleanup</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>-t</option></term>
                   <term><option>--target-release</option></term>
                   <term><option>--default-release</option></term>
     <listitem><para>このオプションは、ポリシーエンジンへのデフォルト入力を制御します。また、指定されたリリース文字列を使用し、デフォルト pin を優先度 990
で作成します。これは、<filename>/etc/apt/preferences</filename> にある一般設定を上書きします。pin
で留めるのを明示されたパッケージには、このオプションの値は影響を与えません。つまりこのオプションで、どの配布パッケージを取得するかを簡単に管理します。一般的な例としては、<option>-t
'2.1*'</option>, <option>-t unstable</option>, <option>-t sid</option>
のようになります。設定項目: <literal>APT::Default-Release</literal>。&apt-preferences;
のマニュアルページも参照してください。</para></listitem>
     </varlistentry>

     <varlistentry><term><option>--trivial-only</option></term>
     <listitem><para>
     「重要でない」操作のみを行います。これは論理的に <option>--assume-yes</option>
の仲間と見なせます。<option>--assume-yes</option> は質問にすべて yes
と答えますが、<option>--trivial-only</option> はすべて no と答えます。設定項目:
<literal>APT::Get::Trivial-Only</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--no-remove</option></term>
     <listitem><para>パッケージが削除される状況になったとき、プロンプトを表示せず中断します。設定項目:
<literal>APT::Get::Remove</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--auto-remove</option></term><term><option>--autoremove</option></term>
     <listitem><para>コマンドが <literal>install</literal> か <literal>remove</literal>
である場合、このオプションは使用していない依存しているパッケージを削除し、<literal>autoremove</literal>
コマンドのように動作します。設定項目: <literal>APT::Get::AutomaticRemove</literal>
     </para></listitem>
     </varlistentry>

     <varlistentry><term><option>--only-source</option></term>
     <listitem><para><literal>source</literal> コマンドと <literal>build-dep</literal>
コマンドでのみ意味があります。指定されたソース名がバイナリテーブルにマップされないようにします。これは、このオプションを指定すると、バイナリパッケージ名を受け付けて対応するソースパッケージを探すのではなく、引数にソースパッケージ名しか受け付けなくなる、ということです。設定項目:
<literal>APT::Get::Only-Source</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--diff-only</option></term><term><option>--dsc-only</option></term><term><option>--tar-only</option></term>
     <listitem><para>ソースアーカイブの diff ファイルや dsc ファイル、tar ファイルのダウンロードのみを行います。設定項目:
<literal>APT::Get::Diff-Only</literal>,
<literal>APT::Get::Dsc-Only</literal>, <literal>APT::Get::Tar-Only</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--arch-only</option></term>
     <listitem><para>構築依存関係の解決を、アーキテクチャに依存したもののみ行います。設定項目: <literal>APT::Get::Arch-Only</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--indep-only</option></term>
     <listitem><para>構築依存関係の解決を、アーキテクチャに依存しないもののみ行います。設定項目:
<literal>APT::Get::Arch-Only</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--allow-unauthenticated</option></term>
     <listitem><para>パッケージが認証できない場合は無視してください。プロンプトは表示されません。ローカルリポジトリでの作業中には有用ですが、ユーザ自身が別の方法でデータの信憑性を確保していない場合は、セキュリティ上の重大なリスクになります。&sources-list;
エントリ用の <option>Trusted</option> オプションの使用は、通常グローバルオーバーライドよりも優先されるはずです。設定項目:
<literal>APT::Get::AllowUnauthenticated</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--no-allow-insecure-repositories</option></term>
     <listitem><para>設定された取得元から検証できないデータを取得する update コマンドを禁止します。APT は、有効な暗号による署名のないリポジトリ用の update
コマンドで失敗します。概念と影響の詳細については &apt-secure; も参照してください。設定項目:
<literal>Acquire::AllowInsecureRepositories</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--allow-releaseinfo-change</option></term>
     <listitem><para>Allow the update command to continue downloading data from a repository
which changed its information of the release contained in the repository
indicating e.g a new major release.  APT will fail at the update command for
such repositories until the change is confirmed to ensure the user is
prepared for the change.  See also &apt-secure; for details on the concept
and configuration.
     </para><para>
     Specialist options
(<literal>--allow-releaseinfo-change-</literal><replaceable>field</replaceable>)
exist to allow changes only for certain fields like
<literal>origin</literal>, <literal>label</literal>,
<literal>codename</literal>, <literal>suite</literal>,
<literal>version</literal> and <literal>defaultpin</literal>. See also
&apt-preferences;.  Configuration Item:
<literal>Acquire::AllowReleaseInfoChange</literal>.</para></listitem>
     </varlistentry>

     <varlistentry><term><option>--show-progress</option></term>
     <listitem><para>パッケージのインストール、アップグレード、削除時にユーザにとってわかりやすい形で進捗情報をターミナルウィンドウ内に表示します。このデータの機械的に解析できるバージョンについては
apt の doc ディレクトリにある README.progress-reporting を見てください。設定項目:
<literal>Dpkg::Progress</literal>、 <literal>Dpkg::Progress-Fancy</literal></para></listitem>
     </varlistentry>

     <varlistentry><term><option>--with-source</option> <option>&synopsis-param-filename;</option></term>
     <listitem><para>
     メタ情報のソースとして指定したファイルを追加します。指定を繰り返すと複数のファイルを追加できます。さらなる詳細については &apt-cache; の
<option>--with-source</option> の説明を見てください。
     </para></listitem>
     </varlistentry>

     &apt-commonoptions;
     
   </variablelist>
 </refsect1>

 <refsect1><title>ファイル</title>
   <variablelist>
     &file-sourceslist;
     &file-aptconf;
     &file-preferences;
     &file-cachearchives;
     &file-statelists;
   </variablelist>
 </refsect1>

 <refsect1><title>関連項目</title>
   <para>&apt-cache;, &apt-cdrom;, &dpkg;, &sources-list;, &apt-conf;, &apt-config;,
&apt-secure;, &guidesdir; にある APT ユーザガイド, &apt-preferences;, APT Howto</para>
 </refsect1>

 <refsect1><title>診断メッセージ</title>
   <para><command>apt-get</command> は正常終了時に 0 を返します。エラー時には十進の 100 を返します。</para>
 </refsect1>
 &manbugs;
 <refsect1><title>&translation-title;</title>
   <para>&translation-holder;</para>
   <para>&translation-english;</para>
 </refsect1>
</refentry>
