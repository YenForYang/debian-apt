<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>apt: Hashes Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">1.8.0~alpha3</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="classHashes-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Hashes Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a1958f0d0809c7f7b7e8559b869cc57d4"><td class="memItemLeft" align="right" valign="top"><a id="a1958f0d0809c7f7b7e8559b869cc57d4"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>SupportedHashes</b> { <b>MD5SUM</b> = (1 &lt;&lt; 0), 
<b>SHA1SUM</b> = (1 &lt;&lt; 1), 
<b>SHA256SUM</b> = (1 &lt;&lt; 2), 
<b>SHA512SUM</b> = (1 &lt;&lt; 3)
 }</td></tr>
<tr class="separator:a1958f0d0809c7f7b7e8559b869cc57d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abf3621440316d4d2004401ad34dc349f"><td class="memItemLeft" align="right" valign="top"><a id="abf3621440316d4d2004401ad34dc349f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>APT_DEPRECATED_MSG</b> (&quot;Use general .Add* and .GetHashStringList methods instead of hardcoding specific hashes&quot;) MD5Summation MD5</td></tr>
<tr class="separator:abf3621440316d4d2004401ad34dc349f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c70d91384a0fa638fd5ba92063c2466"><td class="memItemLeft" align="right" valign="top"><a id="a0c70d91384a0fa638fd5ba92063c2466"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>APT_DEPRECATED_MSG</b> (&quot;Use general .Add* and .GetHashStringList methods instead of hardcoding specific hashes&quot;) SHA1Summation SHA1</td></tr>
<tr class="separator:a0c70d91384a0fa638fd5ba92063c2466"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5175cec7ab03da8df66898b9ee9450e"><td class="memItemLeft" align="right" valign="top"><a id="aa5175cec7ab03da8df66898b9ee9450e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>APT_DEPRECATED_MSG</b> (&quot;Use general .Add* and .GetHashStringList methods instead of hardcoding specific hashes&quot;) SHA256Summation SHA256</td></tr>
<tr class="separator:aa5175cec7ab03da8df66898b9ee9450e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4b68157b226ac8a007a2c44acf688e9"><td class="memItemLeft" align="right" valign="top"><a id="ae4b68157b226ac8a007a2c44acf688e9"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>APT_DEPRECATED_MSG</b> (&quot;Use general .Add* and .GetHashStringList methods instead of hardcoding specific hashes&quot;) SHA512Summation SHA512</td></tr>
<tr class="separator:ae4b68157b226ac8a007a2c44acf688e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbac0d2999e61512448bb44e02d44340"><td class="memItemLeft" align="right" valign="top"><a id="abbac0d2999e61512448bb44e02d44340"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Add</b> (const unsigned char *const Data, unsigned long long const Size) APT_NONNULL(2)</td></tr>
<tr class="separator:abbac0d2999e61512448bb44e02d44340"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05ba096f0b59b573f501c5d95e1b32c8"><td class="memItemLeft" align="right" valign="top"><a id="a05ba096f0b59b573f501c5d95e1b32c8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>APT_DEPRECATED_MSG</b> (&quot;Construct accordingly instead of choosing hashes while adding&quot;) bool Add(const unsigned char *const Data</td></tr>
<tr class="separator:a05ba096f0b59b573f501c5d95e1b32c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a814719685791e08df5c8e03623b7122d"><td class="memItemLeft" align="right" valign="top"><a id="a814719685791e08df5c8e03623b7122d"></a>
unsigned long long const unsigned int const <a class="el" href="classHashes.xhtml">Hashes</a>&#160;</td><td class="memItemRight" valign="bottom"><b>APT_NONNULL</b> (2)</td></tr>
<tr class="separator:a814719685791e08df5c8e03623b7122d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0202677e354e115ed74d6ceef4b490b"><td class="memItemLeft" align="right" valign="top"><a id="ab0202677e354e115ed74d6ceef4b490b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Add</b> (const char *const Data) APT_NONNULL(2)</td></tr>
<tr class="separator:ab0202677e354e115ed74d6ceef4b490b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ab33fc81eb6f34510168da1567f7b9a"><td class="memItemLeft" align="right" valign="top"><a id="a7ab33fc81eb6f34510168da1567f7b9a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Add</b> (const unsigned char *const Beg, const unsigned char *const End) APT_NONNULL(2</td></tr>
<tr class="separator:a7ab33fc81eb6f34510168da1567f7b9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd9329e3532ff31e987edacf072111c2"><td class="memItemLeft" align="right" valign="top"><a id="afd9329e3532ff31e987edacf072111c2"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>AddFD</b> (int const Fd, unsigned long long Size=0)</td></tr>
<tr class="separator:afd9329e3532ff31e987edacf072111c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41b1bc54487cee961f91deea9867576b"><td class="memItemLeft" align="right" valign="top"><a id="a41b1bc54487cee961f91deea9867576b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>APT_DEPRECATED_MSG</b> (&quot;Construct accordingly instead of choosing hashes while adding&quot;) bool AddFD(int const Fd</td></tr>
<tr class="separator:a41b1bc54487cee961f91deea9867576b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d9064bf552f940c29d1ebda2468accb"><td class="memItemLeft" align="right" valign="top"><a id="a0d9064bf552f940c29d1ebda2468accb"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>AddFD</b> (<a class="el" href="classFileFd.xhtml">FileFd</a> &amp;Fd, unsigned long long Size=0)</td></tr>
<tr class="separator:a0d9064bf552f940c29d1ebda2468accb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add62b0151ef7c517d5438872244cf22e"><td class="memItemLeft" align="right" valign="top"><a id="add62b0151ef7c517d5438872244cf22e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>APT_DEPRECATED_MSG</b> (&quot;Construct accordingly instead of choosing hashes while adding&quot;) bool AddFD(<a class="el" href="classFileFd.xhtml">FileFd</a> &amp;Fd</td></tr>
<tr class="separator:add62b0151ef7c517d5438872244cf22e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99326b87f09f0cd20010efdb00608f75"><td class="memItemLeft" align="right" valign="top"><a id="a99326b87f09f0cd20010efdb00608f75"></a>
<a class="el" href="classHashStringList.xhtml">HashStringList</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetHashStringList</b> ()</td></tr>
<tr class="separator:a99326b87f09f0cd20010efdb00608f75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6f93890b7e2e1b6cff7c47f6d33aa01"><td class="memItemLeft" align="right" valign="top">APT_IGNORE_DEPRECATED_PUSH&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHashes.xhtml#ae6f93890b7e2e1b6cff7c47f6d33aa01">Hashes</a> ()</td></tr>
<tr class="separator:ae6f93890b7e2e1b6cff7c47f6d33aa01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc67a639ee29664906e4c62619285a01"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHashes.xhtml#adc67a639ee29664906e4c62619285a01">Hashes</a> (unsigned int const <a class="el" href="classHashes.xhtml">Hashes</a>)</td></tr>
<tr class="separator:adc67a639ee29664906e4c62619285a01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb7ff6e17243411bc07075e2779564bf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHashes.xhtml#afb7ff6e17243411bc07075e2779564bf">Hashes</a> (<a class="el" href="classHashStringList.xhtml">HashStringList</a> const &amp;<a class="el" href="classHashes.xhtml">Hashes</a>)</td></tr>
<tr class="separator:afb7ff6e17243411bc07075e2779564bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2f456d0d5c60b049ec9a295844b06c6"><td class="memItemLeft" align="right" valign="top"><a id="ae2f456d0d5c60b049ec9a295844b06c6"></a>
APT_IGNORE_DEPRECATED_PUSH&#160;</td><td class="memItemRight" valign="bottom"><b>APT_DEPRECATED_MSG</b> (&quot;Construct accordingly instead of choosing hashes while adding&quot;) bool AddFD(int const Fd</td></tr>
<tr class="separator:ae2f456d0d5c60b049ec9a295844b06c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add62b0151ef7c517d5438872244cf22e"><td class="memItemLeft" align="right" valign="top"><a id="add62b0151ef7c517d5438872244cf22e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>APT_DEPRECATED_MSG</b> (&quot;Construct accordingly instead of choosing hashes while adding&quot;) bool AddFD(<a class="el" href="classFileFd.xhtml">FileFd</a> &amp;Fd</td></tr>
<tr class="separator:add62b0151ef7c517d5438872244cf22e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a254f9ca5c1e1232788dedebd142044aa"><td class="memItemLeft" align="right" valign="top"><a id="a254f9ca5c1e1232788dedebd142044aa"></a>
unsigned long long const&#160;</td><td class="memItemRight" valign="bottom"><b>Size</b></td></tr>
<tr class="separator:a254f9ca5c1e1232788dedebd142044aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a254f9ca5c1e1232788dedebd142044aa"><td class="memItemLeft" align="right" valign="top"><a id="a254f9ca5c1e1232788dedebd142044aa"></a>
unsigned long long&#160;</td><td class="memItemRight" valign="bottom"><b>Size</b></td></tr>
<tr class="separator:a254f9ca5c1e1232788dedebd142044aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa167fb348447ad6e4a17e149beacb4e4"><td class="memItemLeft" align="right" valign="top"><a id="aa167fb348447ad6e4a17e149beacb4e4"></a>
unsigned long long unsigned int const&#160;</td><td class="memItemRight" valign="bottom"><b>Hashes</b></td></tr>
<tr class="separator:aa167fb348447ad6e4a17e149beacb4e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ebce9f1f073a4186562de5e624cffcf"><td class="memItemLeft" align="right" valign="top"><a id="a9ebce9f1f073a4186562de5e624cffcf"></a>
APT_IGNORE_DEPRECATED_PUSH unsigned long long&#160;</td><td class="memItemRight" valign="bottom"><b>Size</b></td></tr>
<tr class="separator:a9ebce9f1f073a4186562de5e624cffcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedf588f1dd5af2471180ed7a3037fd22"><td class="memItemLeft" align="right" valign="top"><a id="aedf588f1dd5af2471180ed7a3037fd22"></a>
APT_IGNORE_DEPRECATED_PUSH unsigned long long bool const&#160;</td><td class="memItemRight" valign="bottom"><b>addMD5</b></td></tr>
<tr class="separator:aedf588f1dd5af2471180ed7a3037fd22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a920145fd8c54d74266439b16220e1b14"><td class="memItemLeft" align="right" valign="top"><a id="a920145fd8c54d74266439b16220e1b14"></a>
APT_IGNORE_DEPRECATED_PUSH unsigned long long bool const bool const&#160;</td><td class="memItemRight" valign="bottom"><b>addSHA1</b></td></tr>
<tr class="separator:a920145fd8c54d74266439b16220e1b14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af95fd3125066699254386c570d82b9ff"><td class="memItemLeft" align="right" valign="top"><a id="af95fd3125066699254386c570d82b9ff"></a>
APT_IGNORE_DEPRECATED_PUSH unsigned long long bool const bool const bool const&#160;</td><td class="memItemRight" valign="bottom"><b>addSHA256</b></td></tr>
<tr class="separator:af95fd3125066699254386c570d82b9ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17c7303d4d2a11eee841d63a3ef112df"><td class="memItemLeft" align="right" valign="top">APT_IGNORE_DEPRECATED_PUSH unsigned long long bool const bool const bool const bool const&#160;</td><td class="memItemRight" valign="bottom"><b>addSHA512</b></td></tr>
<tr class="separator:a17c7303d4d2a11eee841d63a3ef112df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbafc90cc108174c9d17d4f61a2e3b02"><td class="memItemLeft" align="right" valign="top"><a id="adbafc90cc108174c9d17d4f61a2e3b02"></a>
unsigned long long bool const&#160;</td><td class="memItemRight" valign="bottom"><b>addMD5</b></td></tr>
<tr class="separator:adbafc90cc108174c9d17d4f61a2e3b02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaba43bc0f6dbcd15488bc957427573a8"><td class="memItemLeft" align="right" valign="top"><a id="aaba43bc0f6dbcd15488bc957427573a8"></a>
unsigned long long bool const bool const&#160;</td><td class="memItemRight" valign="bottom"><b>addSHA1</b></td></tr>
<tr class="separator:aaba43bc0f6dbcd15488bc957427573a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb2a26005f0cf2bf99632ed4fa2def02"><td class="memItemLeft" align="right" valign="top"><a id="acb2a26005f0cf2bf99632ed4fa2def02"></a>
unsigned long long bool const bool const bool const&#160;</td><td class="memItemRight" valign="bottom"><b>addSHA256</b></td></tr>
<tr class="separator:acb2a26005f0cf2bf99632ed4fa2def02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a582a610443899997db4285773d5ee703"><td class="memItemLeft" align="right" valign="top">unsigned long long bool const bool const bool const bool const&#160;</td><td class="memItemRight" valign="bottom"><b>addSHA512</b></td></tr>
<tr class="separator:a582a610443899997db4285773d5ee703"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a9bc6ed2e901d2df1187c940dbbd5077e"><td class="memItemLeft" align="right" valign="top"><a id="a9bc6ed2e901d2df1187c940dbbd5077e"></a>
static const int&#160;</td><td class="memItemRight" valign="bottom"><b>UntilEOF</b> = 0</td></tr>
<tr class="separator:a9bc6ed2e901d2df1187c940dbbd5077e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ae6f93890b7e2e1b6cff7c47f6d33aa01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6f93890b7e2e1b6cff7c47f6d33aa01">&#9670;&nbsp;</a></span>Hashes() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">APT_IGNORE_DEPRECATED_PUSH <a class="el" href="classHashes.xhtml">Hashes</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>create a <a class="el" href="classHashes.xhtml">Hashes</a> object to calculate all supported hashes</p>
<p>If ALL is too much, you can limit which <a class="el" href="classHashes.xhtml">Hashes</a> are calculated with the following other constructors which mention explicitly which hashes to generate. </p>

</div>
</div>
<a id="adc67a639ee29664906e4c62619285a01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc67a639ee29664906e4c62619285a01">&#9670;&nbsp;</a></span>Hashes() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classHashes.xhtml">Hashes</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned int const&#160;</td>
          <td class="paramname"><em>Hashes</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname"><a class="el" href="classHashes.xhtml">Hashes</a></td><td>bitflag composed of #SupportedHashes </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afb7ff6e17243411bc07075e2779564bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb7ff6e17243411bc07075e2779564bf">&#9670;&nbsp;</a></span>Hashes() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classHashes.xhtml">Hashes</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classHashStringList.xhtml">HashStringList</a> const &amp;&#160;</td>
          <td class="paramname"><em>Hashes</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname"><a class="el" href="classHashes.xhtml">Hashes</a></td><td>is a list of hashes </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a17c7303d4d2a11eee841d63a3ef112df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17c7303d4d2a11eee841d63a3ef112df">&#9670;&nbsp;</a></span>addSHA512 <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">APT_IGNORE_DEPRECATED_PUSH unsigned long long bool const bool const bool const bool const addSHA512</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div><div class="line">      <span class="keywordflow">return</span> AddFD(Fd, Size, boolsToFlag(addMD5, addSHA1, addSHA256, addSHA512))</div></div><!-- fragment -->
</div>
</div>
<a id="a582a610443899997db4285773d5ee703"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a582a610443899997db4285773d5ee703">&#9670;&nbsp;</a></span>addSHA512 <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long long bool const bool const bool const bool const addSHA512</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div><div class="line">      <span class="keywordflow">return</span> AddFD(Fd, Size, boolsToFlag(addMD5, addSHA1, addSHA256, addSHA512))</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>apt-pkg/contrib/<a class="el" href="hashes_8h_source.xhtml">hashes.h</a></li>
<li>apt-pkg/contrib/hashes.cc</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
