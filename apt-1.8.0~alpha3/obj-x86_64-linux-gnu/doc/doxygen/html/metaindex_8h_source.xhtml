<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>apt: apt-pkg/metaindex.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">1.8.0~alpha3</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_18f22d4be2ca84c350e120b6506056ca.xhtml">apt-pkg</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">metaindex.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef PKGLIB_METAINDEX_H</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define PKGLIB_METAINDEX_H</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/indexfile.h&gt;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/init.h&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;stddef.h&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#ifndef APT_10_CLEANER_HEADERS</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="pkgcache_8h.xhtml">apt-pkg/pkgcache.h</a>&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgCacheGenerator.xhtml">pkgCacheGenerator</a>;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">class </span><a class="code" href="classOpProgress.xhtml">OpProgress</a>;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#ifndef APT_8_CLEANER_HEADERS</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/pkgrecords.h&gt;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/srcrecords.h&gt;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> std::string;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">class </span><a class="code" href="classIndexTarget.xhtml">IndexTarget</a>;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgCacheGenerator.xhtml">pkgCacheGenerator</a>;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">class </span><a class="code" href="classOpProgress.xhtml">OpProgress</a>;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">class </span><a class="code" href="classmetaIndexPrivate.xhtml">metaIndexPrivate</a>;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classmetaIndex.xhtml">   30</a></span>&#160;<span class="keyword">class </span><a class="code" href="classmetaIndex.xhtml">metaIndex</a></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;   APT_IGNORE_DEPRECATED_PUSH</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="structmetaIndex_1_1checkSum.xhtml">   34</a></span>&#160;   <span class="keyword">struct </span><a class="code" href="structmetaIndex_1_1checkSum.xhtml">checkSum</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;   {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      std::string MetaKeyFilename;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      <a class="code" href="classHashStringList.xhtml">HashStringList</a> <a class="code" href="classHashes.xhtml">Hashes</a>;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> Size;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      APT_DEPRECATED_MSG(<span class="stringliteral">&quot;Use the HashStringList member Hashes instead of a hardcoded HashString&quot;</span>) <a class="code" href="classHashString.xhtml">HashString</a> Hash;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;   };</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;   APT_IGNORE_DEPRECATED_POP</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;   <span class="keyword">enum</span> APT_HIDDEN TriState {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      TRI_YES, TRI_DONTCARE, TRI_NO, TRI_UNSET</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;   };</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;   <a class="code" href="classmetaIndexPrivate.xhtml">metaIndexPrivate</a> * <span class="keyword">const</span> d;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;   std::vector &lt;pkgIndexFile *&gt; *Indexes;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;   <span class="comment">// parsed from the sources.list</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;   <span class="keyword">const</span> <span class="keywordtype">char</span> *Type;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;   std::string <a class="code" href="classURI.xhtml">URI</a>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;   std::string Dist;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;   TriState Trusted;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;   std::string SignedBy;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;   <span class="comment">// parsed from a file</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;   std::string Suite;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;   std::string Codename;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;   time_t Date;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;   time_t ValidUntil;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;   <span class="keywordtype">bool</span> SupportsAcquireByHash;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;   std::map&lt;std::string, checkSum *&gt; Entries;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;   TriState LoadedSuccessfully;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;   <span class="comment">// Various accessors</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;   std::string GetURI() <span class="keyword">const</span>;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;   std::string GetDist() <span class="keyword">const</span>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;   <span class="keyword">const</span> <span class="keywordtype">char</span>* GetType() <span class="keyword">const</span>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;   TriState GetTrusted() <span class="keyword">const</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;   std::string GetSignedBy() <span class="keyword">const</span>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;   std::string GetOrigin() <span class="keyword">const</span>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;   std::string GetLabel() <span class="keyword">const</span>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;   std::string GetVersion() <span class="keyword">const</span>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;   std::string GetCodename() <span class="keyword">const</span>;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;   std::string GetSuite() <span class="keyword">const</span>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;   std::string GetReleaseNotes() <span class="keyword">const</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;   <span class="keywordtype">signed</span> <span class="keywordtype">short</span> GetDefaultPin() <span class="keyword">const</span>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;   <span class="keywordtype">bool</span> GetSupportsAcquireByHash() <span class="keyword">const</span>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;   time_t GetValidUntil() <span class="keyword">const</span>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;   time_t GetDate() <span class="keyword">const</span>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;   APT_HIDDEN time_t GetNotBefore() <span class="keyword">const</span>; <span class="comment">// FIXME make virtual</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;   std::string <a class="code" href="classmetaIndex.xhtml#a20d1dddca161134f12cc836d5fc7bca3">GetExpectedDist</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;   <span class="keywordtype">bool</span> CheckDist(std::string <span class="keyword">const</span> &amp;MaybeDist) <span class="keyword">const</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;   <span class="comment">// Interface for acquire</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;   <span class="keyword">virtual</span> std::string Describe() <span class="keyword">const</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;   <span class="keyword">virtual</span> std::string ArchiveURI(std::string <span class="keyword">const</span>&amp; File) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> GetIndexes(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> *Owner, <span class="keywordtype">bool</span> <span class="keyword">const</span> &amp;GetAll=<span class="keyword">false</span>) = 0;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;   <span class="keyword">virtual</span> std::vector&lt;IndexTarget&gt; GetIndexTargets() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;   <span class="keyword">virtual</span> std::vector&lt;pkgIndexFile *&gt; *GetIndexFiles() = 0;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsTrusted() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Load(std::string <span class="keyword">const</span> &amp;Filename, std::string * <span class="keyword">const</span> ErrorText) = 0;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;   <span class="keyword">virtual</span> <a class="code" href="classmetaIndex.xhtml">metaIndex</a> * <a class="code" href="classmetaIndex.xhtml#a40b4c1b95dbb0140cc29d436a3980287">UnloadedClone</a>() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;   <span class="comment">// the given metaIndex is potentially invalid after this call and should be deleted</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;   <span class="keywordtype">void</span> swapLoad(<a class="code" href="classmetaIndex.xhtml">metaIndex</a> * <span class="keyword">const</span> OldMetaIndex);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;   <span class="comment">// Lookup functions for parsed Hashes</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;   <a class="code" href="structmetaIndex_1_1checkSum.xhtml">checkSum</a> *Lookup(std::string <span class="keyword">const</span> &amp;MetaKey) <span class="keyword">const</span>;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="classmetaIndex.xhtml#ac7f2b70376b5ef96dca17cec69c43e9b">Exists</a>(std::string <span class="keyword">const</span> &amp;MetaKey) <span class="keyword">const</span>;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;   std::vector&lt;std::string&gt; MetaKeys() <span class="keyword">const</span>;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;   TriState GetLoadedSuccessfully() <span class="keyword">const</span>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;   <span class="comment">// Interfaces for pkgCacheGen</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;   <span class="keyword">virtual</span> <a class="code" href="classpkgCache_1_1RlsFileIterator.xhtml">pkgCache::RlsFileIterator</a> FindInCache(<a class="code" href="classpkgCache.xhtml">pkgCache</a> &amp;Cache, <span class="keywordtype">bool</span> <span class="keyword">const</span> ModifyCheck) <span class="keyword">const</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Merge(<a class="code" href="classpkgCacheGenerator.xhtml">pkgCacheGenerator</a> &amp;Gen,<a class="code" href="classOpProgress.xhtml">OpProgress</a> *Prog) <span class="keyword">const</span>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;   <a class="code" href="classmetaIndex.xhtml">metaIndex</a>(std::string <span class="keyword">const</span> &amp;URI, std::string <span class="keyword">const</span> &amp;Dist,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;             <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> Type);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;   <span class="keyword">virtual</span> ~<a class="code" href="classmetaIndex.xhtml">metaIndex</a>();</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;   <span class="comment">// FIXME: make virtual on next abi break</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="classmetaIndex.xhtml#a2bb75536ec84bdc344cf07667b587107">IsArchitectureSupported</a>(std::string <span class="keyword">const</span> &amp;arch) <span class="keyword">const</span>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;   <span class="keywordtype">bool</span> IsArchitectureAllSupportedFor(<a class="code" href="classIndexTarget.xhtml">IndexTarget</a> <span class="keyword">const</span> &amp;target) <span class="keyword">const</span>;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;   <span class="keywordtype">bool</span> HasSupportForComponent(std::string <span class="keyword">const</span> &amp;component) <span class="keyword">const</span>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;   <span class="comment">// FIXME: should be members of the class on abi break</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;   APT_HIDDEN <span class="keywordtype">void</span> <a class="code" href="classmetaIndex.xhtml#afc8306917908b5cb88f07c1be1f28a2c">SetOrigin</a>(std::string <span class="keyword">const</span> &amp;origin);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;   APT_HIDDEN <span class="keywordtype">void</span> SetLabel(std::string <span class="keyword">const</span> &amp;label);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;   APT_HIDDEN <span class="keywordtype">void</span> SetVersion(std::string <span class="keyword">const</span> &amp;version);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;   APT_HIDDEN <span class="keywordtype">void</span> SetDefaultPin(<span class="keywordtype">signed</span> <span class="keywordtype">short</span> <span class="keyword">const</span> defaultpin);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;   APT_HIDDEN <span class="keywordtype">void</span> SetReleaseNotes(std::string <span class="keyword">const</span> &amp;notes);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;};</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="classpkgCache_1_1RlsFileIterator_xhtml"><div class="ttname"><a href="classpkgCache_1_1RlsFileIterator.xhtml">pkgCache::RlsFileIterator</a></div><div class="ttdef"><b>Definition:</b> cacheiterators.h:405</div></div>
<div class="ttc" id="classOpProgress_xhtml"><div class="ttname"><a href="classOpProgress.xhtml">OpProgress</a></div><div class="ttdef"><b>Definition:</b> progress.h:32</div></div>
<div class="ttc" id="classHashStringList_xhtml"><div class="ttname"><a href="classHashStringList.xhtml">HashStringList</a></div><div class="ttdef"><b>Definition:</b> hashes.h:77</div></div>
<div class="ttc" id="classmetaIndex_xhtml_a20d1dddca161134f12cc836d5fc7bca3"><div class="ttname"><a href="classmetaIndex.xhtml#a20d1dddca161134f12cc836d5fc7bca3">metaIndex::GetExpectedDist</a></div><div class="ttdeci">std::string GetExpectedDist() const</div><div class="ttdef"><b>Definition:</b> metaindex.cc:84</div></div>
<div class="ttc" id="classmetaIndex_xhtml_afc8306917908b5cb88f07c1be1f28a2c"><div class="ttname"><a href="classmetaIndex.xhtml#afc8306917908b5cb88f07c1be1f28a2c">metaIndex::SetOrigin</a></div><div class="ttdeci">APT_HIDDEN void SetOrigin(std::string const &amp;origin)</div><div class="ttdef"><b>Definition:</b> metaindex.cc:172</div></div>
<div class="ttc" id="classpkgCache_xhtml"><div class="ttname"><a href="classpkgCache.xhtml">pkgCache</a></div><div class="ttdef"><b>Definition:</b> pkgcache.h:109</div></div>
<div class="ttc" id="classpkgAcquire_xhtml"><div class="ttname"><a href="classpkgAcquire.xhtml">pkgAcquire</a></div><div class="ttdoc">The core download scheduler. {{{. </div><div class="ttdef"><b>Definition:</b> acquire.h:99</div></div>
<div class="ttc" id="classURI_xhtml"><div class="ttname"><a href="classURI.xhtml">URI</a></div><div class="ttdef"><b>Definition:</b> strutl.h:204</div></div>
<div class="ttc" id="classpkgCacheGenerator_xhtml"><div class="ttname"><a href="classpkgCacheGenerator.xhtml">pkgCacheGenerator</a></div><div class="ttdef"><b>Definition:</b> pkgcachegen.h:41</div></div>
<div class="ttc" id="pkgcache_8h_xhtml"><div class="ttname"><a href="pkgcache_8h.xhtml">pkgcache.h</a></div><div class="ttdoc">pkgCache - Structure definitions for the cache file </div></div>
<div class="ttc" id="classHashes_xhtml"><div class="ttname"><a href="classHashes.xhtml">Hashes</a></div><div class="ttdef"><b>Definition:</b> hashes.h:182</div></div>
<div class="ttc" id="classIndexTarget_xhtml"><div class="ttname"><a href="classIndexTarget.xhtml">IndexTarget</a></div><div class="ttdoc">Information about an index file. </div><div class="ttdef"><b>Definition:</b> indexfile.h:43</div></div>
<div class="ttc" id="classHashString_xhtml"><div class="ttname"><a href="classHashString.xhtml">HashString</a></div><div class="ttdef"><b>Definition:</b> hashes.h:38</div></div>
<div class="ttc" id="classmetaIndex_xhtml_ac7f2b70376b5ef96dca17cec69c43e9b"><div class="ttname"><a href="classmetaIndex.xhtml#ac7f2b70376b5ef96dca17cec69c43e9b">metaIndex::Exists</a></div><div class="ttdeci">bool Exists(std::string const &amp;MetaKey) const</div><div class="ttdoc">tests if a checksum for this file is available </div><div class="ttdef"><b>Definition:</b> metaindex.cc:113</div></div>
<div class="ttc" id="classmetaIndexPrivate_xhtml"><div class="ttname"><a href="classmetaIndexPrivate.xhtml">metaIndexPrivate</a></div><div class="ttdef"><b>Definition:</b> metaindex.cc:12</div></div>
<div class="ttc" id="classmetaIndex_xhtml_a2bb75536ec84bdc344cf07667b587107"><div class="ttname"><a href="classmetaIndex.xhtml#a2bb75536ec84bdc344cf07667b587107">metaIndex::IsArchitectureSupported</a></div><div class="ttdeci">bool IsArchitectureSupported(std::string const &amp;arch) const</div><div class="ttdef"><b>Definition:</b> metaindex.cc:147</div></div>
<div class="ttc" id="structmetaIndex_1_1checkSum_xhtml"><div class="ttname"><a href="structmetaIndex_1_1checkSum.xhtml">metaIndex::checkSum</a></div><div class="ttdef"><b>Definition:</b> metaindex.h:34</div></div>
<div class="ttc" id="classmetaIndex_xhtml_a40b4c1b95dbb0140cc29d436a3980287"><div class="ttname"><a href="classmetaIndex.xhtml#a40b4c1b95dbb0140cc29d436a3980287">metaIndex::UnloadedClone</a></div><div class="ttdeci">virtual metaIndex * UnloadedClone() const =0</div></div>
<div class="ttc" id="classmetaIndex_xhtml"><div class="ttname"><a href="classmetaIndex.xhtml">metaIndex</a></div><div class="ttdef"><b>Definition:</b> metaindex.h:30</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
